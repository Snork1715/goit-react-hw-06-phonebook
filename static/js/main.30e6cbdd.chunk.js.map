{"version":3,"sources":["redux/phonebook/phonebook-types.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducers.js","redux/store.js","components/Form/Form.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["actions","DELETE","ADD","FILTER","deleteContacts","createAction","types","addContacts","name","number","payload","id","shortid","generate","filterContacts","itemsReducer","createReducer","builder","addCase","state","filter","item","dublicateContact","find","alert","filterReducer","_","combineReducers","items","counterPersistConfig","key","version","storage","AsyncStorage","blacklist","rootReducer","counter","persistReducer","counterReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","Form","useState","setName","setNumber","dispatch","useDispatch","handleChange","event","currentTarget","value","onSubmit","preventDefault","className","type","onChange","pattern","title","required","connect","onDelete","onClick","ContactsList","contacts","map","contact","e","target","placeholder","Phonebook","useSelector","normalizedFilter","toLowerCase","filteredContacts","includes","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.30e6cbdd.chunk.js","sourcesContent":["const actions = {\r\n  DELETE: \"phonebook/delete\",\r\n  ADD: \"phonebook/add\",\r\n  FILTER: \"phonebook/filter\",\r\n};\r\n\r\nexport default actions;\r\n","import shortid from \"shortid\";\r\nimport types from \"./phonebook-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst deleteContacts = createAction(types.DELETE);\r\nconst addContacts = createAction(types.ADD, (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst filterContacts = createAction(types.FILTER);\r\n\r\nconst actions = { deleteContacts, addContacts, filterContacts };\r\n\r\nexport default actions;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst itemsState = [\r\n  {\r\n    id: \"id-1\",\r\n    name: \"Rosie Simpson\",\r\n    number: \"459-12-56\",\r\n  },\r\n  {\r\n    id: \"id-2\",\r\n    name: \"Hermione Kline\",\r\n    number: \"443-89-12\",\r\n  },\r\n  {\r\n    id: \"id-3\",\r\n    name: \"Eden Clements\",\r\n    number: \"645-17-79\",\r\n  },\r\n  {\r\n    id: \"id-4\",\r\n    name: \"Annie Copeland\",\r\n    number: \"227-91-26\",\r\n  },\r\n];\r\n\r\nconst itemsReducer = createReducer(itemsState, (builder) => {\r\n  builder\r\n    .addCase(actions.deleteContacts, (state, { payload }) => {\r\n      return state.filter((item) => item.id !== payload);\r\n    })\r\n    .addCase(actions.addContacts, (state, { payload }) => {\r\n      const dublicateContact = state.find((item) => item.name === payload.name);\r\n      if (dublicateContact) {\r\n        alert(`Контакт ${dublicateContact.name} уже существует`);\r\n        return state;\r\n      } else {\r\n        return [payload, ...state];\r\n      }\r\n    });\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", (builder) => {\r\n  builder.addCase(actions.filterContacts, (_, { payload }) => {\r\n    return payload;\r\n  });\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport counterReducer from \"./phonebook/phonebook-reducers\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  persistReducer,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from \"redux-persist\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst counterPersistConfig = {\r\n  key: \"my_contacts\",\r\n  version: 1,\r\n  storage: AsyncStorage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: persistReducer(counterPersistConfig, counterReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n});\r\n\r\nexport default store;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport actions from \"../../redux/phonebook/phonebook-actions\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onAdd = () => dispatch(actions.addContacts(name, number));\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onAdd();\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"contact-form\">\r\n      <label>Имя</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={handleChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n      <label>Телефон</label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        onChange={handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\" className=\"form_add-button\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import actions from \"../../redux/phonebook/phonebook-actions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ContactItem.css\";\r\n\r\nconst ContactItem = ({ name, id, number, onDelete }) => {\r\n  return (\r\n    <li className=\"contact-item\">\r\n      {name} {number}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n        className=\"contact-item_button\"\r\n      >\r\n        Удалить\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (value) => dispatch(actions.deleteContacts(value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);\r\n","import React from \"react\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport \"./ContactsList.css\";\r\n\r\nconst ContactsList = ({ contacts }) => {\r\n  return (\r\n    <ul className=\"phonebook-contacts_list\">\r\n      {contacts.map((contact) => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import actions from \"../../redux/phonebook/phonebook-actions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Поиск контактов:\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Введите имя для поиска\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className=\"filter-input\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\nconst mapStatetoProps = (state) => ({\r\n  value: state.counter.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(actions.filterContacts(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Filter);\r\n","import { useSelector } from \"react-redux\";\r\nimport Form from \"./components/Form\";\r\nimport ContactsList from \"./components/ContactsList\";\r\nimport Filter from \"./components/Filter\";\r\nimport \"./App.css\";\r\n\r\nconst Phonebook = () => {\r\n  const filter = useSelector((state) => state.counter.filter);\r\n  const contacts = useSelector((state) => state.counter.items);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const filteredContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return (\r\n    <div className=\"phonebook-warper\">\r\n      <div className=\"phonebook-form\">\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n      </div>\r\n      <div className=\"phonebook-contacts\">\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactsList contacts={filteredContacts} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}